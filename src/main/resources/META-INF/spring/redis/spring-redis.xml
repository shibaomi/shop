<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    
    <!--jedis的连接池配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大空闲连接数量，默认8 -->
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!-- 最小空闲连接数量, 处理间隔时间为 timeBetweenEvictionRunsMillis，默认0 -->
        <property name="minIdle" value="${redis.minIdle}" />
        <!-- 池中持有的最大连接数量，默认8 -->
        <property name="maxTotal" value="${redis.maxTotal}" />
        <!-- 池中可用资源耗尽时,是否阻塞等待 maxWaitMillis 毫秒 ,若设置false，直接抛出异常，maxWaitMillis不生效，默认true-->
        <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}" />
        <!-- 连接池没有可用连接时等待可用连接的最大等待时间，毫秒，默认-1无限制等待，maxWaitMillis为true生效 -->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <!-- 默认false，取连接时进行验证，消耗性能-->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
        <!-- 默认false，是否检测空闲连接链接的有效性, 间隔时间为 timeBetweenEvictionRunsMillis -->
        <property name="testWhileIdle" value="${redis.testWhileIdle}" />
        <!--  清除连接线、验证连接和清除空闲连接的间隔毫秒数，最低1s，默认-1，用于多长时间进行验证空闲连接、清除连接、检测连接是否空闲 ，即定时器的时间间隔，单位毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
        <!-- 空闲连接被从连接池移除前存在的最小时间，当超过该值则移除该空闲连接，默认60*30s，单位毫秒  -->
        <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
        <!-- 连接池放池化对象方式（true：放在空闲队列最前面，false：放在空闲队列最后面）, 默认true -->
        <property name="lifo" value="${redis.lifo}" />
        <!-- //等待线程拿空闲连接的方式（true：相当于等待线程是在先进先出去拿空闲连接）,默认false -->
        <property name="fairness" value="${redis.fairness}" />
        <!-- 对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)。负值(-1)表示不移除 .默认60*30s，单位毫秒-->
        <property name="softMinEvictableIdleTimeMillis" value="${redis.softMinEvictableIdleTimeMillis}" />
        <!-- 每次逐出检查时 逐出检查的最大数目 , 默认3-->
        <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
        <!-- 设置的逐出策略类名, 默认DefaultEvictionPolicy(当连接超过最大空闲时间,或连接数超过最大空闲连接数) -->
        <property name="evictionPolicyClassName" value="${redis.evictionPolicyClassName}" />
        <!-- 默认false-->
        <property name="testOnCreate" value="${redis.testOnCreate}" />
        <!-- 连接释放入池时是否验证连接，默认false， -->
        <property name="testOnReturn" value="${redis.testOnReturn}" />
        <!--  是否启用pool的jmx管理功能, 默认true -->
        <property name="jmxEnabled" value="${redis.jmxEnabled}" />
        <!--  默认pool -->
        <property name="jmxNamePrefix" value="${redis.jmxNamePrefix}" />
        <!--  默认pool -->
        <property name="jmxNameBase" value="${redis.jmxNameBase}" />
    </bean>
    
	<!--jedis的连接池配置 -->
	<bean id="jedisConnectionFactory" 
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
		p:host-name="${redis.server}" 
		p:port="${redis.port}" 
		p:timeout="${redis.timeout}"
		p:password="${redis.password}"
		p:database="${redis.database}"
		p:use-pool="${redis.usePool}"
		p:pool-config-ref="poolConfig"/>
		
	<!-- redis template definition -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" 
		p:connection-factory-ref="jedisConnectionFactory"/>
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" 
		p:connection-factory-ref="jedisConnectionFactory"/>
		
</beans>