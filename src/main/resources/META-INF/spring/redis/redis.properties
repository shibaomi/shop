#redis基本信息配置 
redis.port=6379
redis.server=127.0.0.1
redis.usePool=false
redis.timeout=2000
redis.password=
redis.database=0
#最大空闲连接数量，默认8 
redis.maxIdle=100
#最小空闲连接数量, 处理间隔时间为 timeBetweenEvictionRunsMillis，默认0
redis.minIdle=20
#池中持有的最大连接数量，默认8
redis.maxTotal=100
#池中可用资源耗尽时,是否阻塞等待 maxWaitMillis 毫秒 ,若设置false，直接抛出异常，maxWaitMillis不生效，默认true
redis.blockWhenExhausted=true
#连接池没有可用连接时等待可用连接的最大等待时间，毫秒，默认-1无限制等待，maxWaitMillis为true生效
redis.maxWaitMillis=30000
#默认false，取连接时进行验证，消耗性能
redis.testOnBorrow=false
#默认false，是否检测空闲连接链接的有效性, 间隔时间为 timeBetweenEvictionRunsMillis
redis.testWhileIdle=true
#清除连接线、验证连接和清除空闲连接的间隔毫秒数，最低1s，默认-1，用于多长时间进行验证空闲连接、清除连接、检测连接是否空闲 ，即定时器的时间间隔，单位毫秒
redis.timeBetweenEvictionRunsMillis=10000
#空闲连接被从连接池移除前存在的最小时间，当超过该值则移除该空闲连接，默认60*30s，单位毫秒 
redis.minEvictableIdleTimeMillis=1800000
#连接池放池化对象方式（true：放在空闲队列最前面，false：放在空闲队列最后面）, 默认true
redis.lifo=true
#等待线程拿空闲连接的方式（true：相当于等待线程是在先进先出去拿空闲连接）,默认false
redis.fairness=false
#对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)。负值(-1)表示不移除 .默认60*30s，单位毫秒
redis.softMinEvictableIdleTimeMillis=1800000
# 每次逐出检查时 逐出检查的最大数目 , 默认3
redis.numTestsPerEvictionRun=3
#设置的逐出策略类名, 默认DefaultEvictionPolicy(当连接超过最大空闲时间,或连接数超过最大空闲连接数)
redis.evictionPolicyClassName=org.apache.commons.pool2.impl.DefaultEvictionPolicy
#默认false
redis.testOnCreate=false
#连接释放入池时是否验证连接，默认false
redis.testOnReturn=false
#是否启用pool的jmx管理功能, 默认true
redis.jmxEnabled=true
#默认pool
redis.jmxNamePrefix=pool
#默认pool
redis.jmxNameBase=pool